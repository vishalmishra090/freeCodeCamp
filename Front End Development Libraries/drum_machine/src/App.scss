:root {
  --primary-light: #8abdff;
  --primary: #6d5dfc;
  --primary-dark: #5b0eeb;

  --white: #ffffff;
  --greyLight-1: #e4ebf5;
  --greyLight-2: #c8d0e7;
  --greyLight-3: #bec8e4;
  --greyDark: #9baacf;
}

$shadow: 0.3rem 0.3rem 0.6rem var(--greyLight-2),
  -0.2rem -0.2rem 0.5rem var(--white);
$inner-shadow: inset 0.2rem 0.2rem 0.5rem var(--greyLight-2),
  inset -0.2rem -0.2rem 0.5rem var(--white);

*,
*::before,
*::after {
  margin: 0;
  padding: 0;
  box-sizing: inherit;
}

html {
  box-sizing: border-box;
  font-size: 62.5%; // 1rem = 10px    100% = 16px
  background: var(--greyLight-1);
}

body {
  user-select: none;
  background-color: lighten(grey, 5%);
}

input,
textarea,
button,
select,
a {
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
}

@mixin Btn($w, $h, $fs, $br) {
  width: $w;
  height: $h;
  font-size: $fs;
  border-radius: $br;

  &-active:not(.power-off){
    color: var(--primary);
  }

  &-active{
    box-shadow: $inner-shadow;
    font-size: calc(#{$fs} - 0.1rem);
  }
}


.btn {
  @include Btn(5rem, 5rem, 2rem, 50%);
  border: none;
  box-shadow: $shadow;
  display: flex;
  justify-content: center;
  align-items: center;
  cursor: pointer;
  background: var(--greyLight-1);
  color: var(--greyDark);
  transition: all 0.5s ease, font-size 0s linear;

  // &:hover {color: var(--primary);}
  // Solving Sticky Hover States
  // https://css-tricks.com/solving-sticky-hover-states-with-media-hover-hover/

  @media (hover: hover) {
    &:not(.power-off):hover {
      color: var(--primary);
    }
  }
}

#app {
  min-height: 100vh;
  display: flex;
  justify-content: center;
  align-items: center;
  font-family: "Poppins", sans-serif;
  background: var(--greyLight-1);
  padding: 2.5rem;
}

#drum-machine {
  width: 100%;
  max-width: 75rem;
  min-height: 40rem;
  border-radius: 3rem;
  box-shadow: 0.8rem 0.8rem 1.4rem var(--greyLight-2),
    -0.2rem -0.2rem 1.8rem var(--white);
  padding: 4rem;
  display: grid;
  grid-template-columns: calc(50% - 2.5rem) calc(50% - 2.5rem);
  grid-template-rows: 33.33% 33.33% 33.33%;
  justify-content: center;
  column-gap: 5rem;

  @media (max-width: 850px){
    padding: 3rem 2rem;
    max-width: 35rem;
    grid-template-columns: 100%;
    grid-template-rows: auto auto auto auto;
    row-gap: 3rem;
  }
}

#drum-pad {
  grid-row: 1 / 4;
  grid-column: 1 / 2;
  max-width: 30rem;
  min-height: 30rem;
  display: flex;
  flex-flow: row wrap;
  justify-content: center;
  align-items: center;
  @media (max-width: 850px){
    grid-row: 2 / 3;
    grid-column: 1 / 2;
  }
}

.drum-pad-key {
  @include Btn(8rem, 8rem, 2rem, 35%);
  margin: 1rem;

  @media(max-width: 850px){
    @include Btn(6rem, 6rem, 2rem, 30%);
  }
}

.slider {
  grid-row: 3 / 4;
  grid-column: 2 / 3;
  display: flex;
  flex-direction: column;
  width: 100%;
  height: 2rem;
  align-self: center;
  margin: auto;
  position: relative;
  
  @media (max-width: 850px){
    grid-row: 4 / 5;
    grid-column: 1 / 2;
  }
  &-box {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    box-shadow: $inner-shadow;
    border-radius: 1rem;
    display: flex;
    justify-content: center;
    align-items: center;
  }
  &-color-box {
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    z-index: 100;
    border-radius: inherit;
    display: flex;
    justify-content: flex-start;
    align-items: center;
    overflow: hidden;
  }

  &-color {
    height: 100%;
    opacity: 0.6;
    background: var(--primary);
    background: linear-gradient(-1deg, #d4d4d4 0%, #e4ebf5 50%, #ffffff 100%);

    &:not(.power-off){
      opacity: 1;
      background: linear-gradient(
      -1deg,
      var(--primary-dark) 0%,
      var(--primary) 50%,
      var(--primary-light) 100%);
    }
  }

  &-btn-box {
    position: absolute;
    width: calc(100% - 3rem);
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 200;
  }

  &-btn {
    position: absolute;
    width: 3rem;
    height: 3rem;
    border-radius: 50%;
    background: var(--white);
    position: absolute;
    box-shadow: 0px 0.1rem 0.3rem 0px var(--greyLight-3);
    cursor: pointer;
    display: flex;
    justify-content: center;
    align-items: center;

    &::after {
      content: "";
      position: absolute;
      width: 1rem;
      height: 1rem;
      border-radius: 50%;
      box-shadow: $inner-shadow;
    }
  }

  &-input {
    appearance: none;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    box-shadow: $inner-shadow;
    border-radius: 1rem;
    opacity: 0;
    z-index: 999;
  }

  @mixin sliderThumb($className) {
    appearance: none;
    width: 3rem;
    height: 3rem;
    border-radius: 50%;
    background: white;
    cursor: pointer;
  }

  &-input::-webkit-slider-thumb {
    @include sliderThumb(&);
  }
  &-input::-moz-range-thumb {
    @include sliderThumb(&);
  }
}

.display {
  width: 100%;
  margin: auto;
  height: 7rem;
  box-shadow: $shadow;
  border-radius: 1rem;
  grid-row: 1 / 2;
  grid-column: 2 / 3;
  align-self: center;
  display: flex;
  justify-content: center;
  align-items: center;
  @media (max-width: 850px){
    grid-row: 1 / 2;
    grid-column: 1 / 2;
  }

  &-text {
    width: calc(100% - 0.8rem);
    height: 6.2rem;
    border-radius: 0.8rem;
    box-shadow: $inner-shadow;
    font-size: 2rem;
    overflow: hidden;

    &-row {
      background: #b4c7db8a;
      width: 100%;
      height: 100%;
      display: flex;
      flex-flow: row nowrap;
      justify-content: center;
      align-items: center;
    }
    &-col1 {
      height: 100%;
      width: 10.5rem;
      min-width: 10.5rem;
      display: flex;
      flex-flow: row nowrap;
      justify-content: stretch;
      align-items: center;
      padding: 1rem;
      .display-volume,
      .display-kit {
        width: 50%;
        height: 100%;
        flex-grow: 1;
        font-size: 1.2rem;
        display: flex;
        flex-flow: column nowrap;
        justify-content: space-evenly;
        align-items: center;
      }
    }
    &-col2 {
      padding: 0.5rem;
      font-size: 1.5rem;
      flex-grow: 1;
      text-align: center;
    }
  }
}

.setting-pad {
  width: 100%;
  grid-row: 2 / 3;
  grid-column: 2 / 3;
  align-self: center;
  justify-self: center;
  display: flex;
  flex-flow: row nowrap;
  justify-content: space-around;
  @media (max-width: 850px){
    grid-row: 3 / 4;
    grid-column: 1 / 2;
  }
  
}
.radio {
  position: relative;
  width: 6rem;
  height: 6rem;
  @media (max-width: 850px){
    width: 5rem;
    height: 5rem;
  }
  &-input {
    display: none;

    &:checked ~ label {
      box-shadow: $inner-shadow;
      &::after{
        width: 39%;
        height: 39%;
      }
      &:not(.power-off)::after {
        background: var(--primary);
      }
    }
  }

  &-label {
    box-shadow: $shadow;
    position: absolute;
    display: flex;
    justify-content: center;
    align-items: center;
    cursor: pointer;
    width: 100%;
    height: 100%;
    border-radius: 50%;
    &:not(.power-off):hover {
      &::after {
        background: var(--primary);
      }
    }
   

    &::after {
      content: "";
      position: absolute;
      width: 40%;
      height: 40%;
      background: var(--greyDark);
      border-radius: 50%;
      transition: all 0.3s ease, width 0s linear, height 0s linear;
    }
  }
}

.power-btn {
  @include Btn(6rem, 6rem, 2.5rem, 50%);
  &:hover {
    color: inherit;
  }
  @media (max-width: 850px){
    @include Btn(5rem, 5rem, 2.5rem, 50%);
  }
}

#loader::after{
  content: "Loading";
  white-space: pre;
  animation-name: LoaderAnim;
  animation-duration: 2s;
  animation-timing-function: ease-in;
  animation-iteration-count: infinite;
  animation-direction:normal;
}

@keyframes LoaderAnim {
  0%{
    content: "Loading   ";
  }
  30%{
    content: "Loading.  ";
  }
  60%{
    content: "Loading.. ";
  }
  90%{
    content: "Loading...";
  }
  100%{
    content: "Loading...";
  }
}

